name: Test execution

on:
  push:
    branches:
      - tests
      - gh-pages

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    # 1. Acceder a la versi√≥n actualizada de gh-pages 
    - name: Configure pull
      run: |
        git config pull.rebase false
    - name: Set up committer identity for GitHub Actions
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
    - name: Checkout the tests branch
      run: git checkout tests
    - name: Fetch updates from gh-pages
      run: git fetch origin gh-pages
    - name: Merge gh-pages into tests
      run: git merge origin/gh-pages --allow-unrelated-histories
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



    # 2. Preparar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    # 3. Instalar dependencias necesarias
    - name: Install dependencies
      run: npm install

    # 4. Ejecutar los tests unitarios
    - name: Run Jest tests
      run: npm run test

    - name: List test-results directory
      run: ls -al ./test-results/jest

    - name: Save Jest results (XML)
      uses: actions/upload-artifact@v3
      with:
        name: jest-results
        path: ./test-results/jest/results.xml

        
    # 5. Ejecutar los tests funcionales
    - name: Run Cypress tests
      run: npx cypress run --spec "cypress/e2e/tests.cy.js"
    - name: Save Cypress results
      uses: actions/upload-artifact@v3
      with:
        name: cypress-results
        path: ./test-results/cypress.xml
